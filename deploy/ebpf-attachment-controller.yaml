apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ebpf-attachment-controller
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "watch", "list", "create", "delete", "patch"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "watch", "list"]
- apiGroups: [""]
  resources: ["nodes/status"]
  verbs: ["patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ebpf-attachment-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ebpf-attachment-controller 
subjects:
- kind: ServiceAccount
  name: ebpf-attachment-controller
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ebpf-attachment-controller 
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: ebpf-attachment-controller
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: ebpf-attachment-controller
  template:
    metadata:
      labels:
        app: ebpf-attachment-controller
    spec:
      tolerations:
      - operator: Exists
        effect: NoSchedule
      serviceAccount: ebpf-attachment-controller
      hostNetwork: true
      hostPID: true
      priorityClassName: system-node-critical
      containers:
      - name: ebpf-attachment-controller
        image: dushyantbehl/ebpf-attachment-controller:latest
        imagePullPolicy: Always
        command: ["/bin/bash","-c"]
        args: ["ulimit -l unlimited; /opt/controller/bin/ebpf-attachment-controller"]
        env:
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CONTROLLER_CONFIG
          value: /opt/controller/config/controller-config.json
        - name: CONTROLLER_TOOLS
          value: /opt/controller/src/tools/
        securityContext:
          privileged: true
          allowPrivilegeEscalation: true
          capabilities:
            add: ["NET_ADMIN"]
        volumeMounts:
        - name: containerdsock
          mountPath: /run/containerd/
        - name: sys
          mountPath: /sys/
        - name: var
          mountPath: /var/
        - name: proc
          mountPath: /proc/
        - name: run
          mountPath: /run/
      volumes:
      - name: containerdsock
        hostPath:
          path: /run/containerd/
      - name: sys
        hostPath:
          path: /sys/
      - name: var
        hostPath:
          path: /var/
      - name: proc
        hostPath:
          path: /proc/
      - name: run
        hostPath:
          path: /run/
